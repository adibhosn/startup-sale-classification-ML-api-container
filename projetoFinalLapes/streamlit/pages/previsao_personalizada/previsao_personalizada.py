import streamlit as st
from pages.previsao_personalizada.enviar_coletar_dados_previsao import coletar_dados, enviar_previsao

def exibir_texto():
    '''Exibe o texto de introduÃ§Ã£o da pÃ¡gina.'''

    st.markdown(
        "<h1 style='text-align: center; color: #00A0E0;'>PrevisÃ£o Personalizada de Venda de Startups ğŸ”®</h1>",unsafe_allow_html=True)
    st.markdown('''
    ### Bem-vindo Ã  ferramenta de previsÃ£o de venda de startups! ğŸš€
    Insira as informaÃ§Ãµes abaixo para prever se sua startup tem grandes chances de ser vendida ou nÃ£o.
    ''')

def exibir_resultado(predicao):
    '''Exibe o resultado da previsÃ£o para o usuÃ¡rio de forma visual'''

    if predicao is None:
        st.markdown("<h3 style='color: orange;'>NÃ£o foi possÃ­vel obter uma previsÃ£o. Tente novamente mais tarde.</h3>", unsafe_allow_html=True)
    elif predicao == 1:
        st.markdown("<h3 style='color: green;'>A startup tem grandes chances de ser vendida! ğŸ’°</h3>", unsafe_allow_html=True)
    else:
        st.markdown("<h3 style='color: red;'>A startup provavelmente nÃ£o serÃ¡ vendida. ğŸ˜”</h3>", unsafe_allow_html=True)

def previsao_personalizada():
    '''FunÃ§Ã£o principal da pÃ¡gina de PrevisÃ£o Personalizada, chama a requisiÃ§Ã£o, exibe o texto
      define os dados com base na funÃ§Ã£o coletar_dados(), depois envia-os com base na funÃ§Ã£o enviar_previsao(dados, requisiÃ§Ã£o)
      alÃ©m de exibir o resultado para o usuÃ¡rio.'''
    
    #definindo url da requisiÃ§Ã£o
    requisicao = 'http://flask_api:5003/previsao_personalizada'

    exibir_texto()
    
    dados = coletar_dados()

    if st.button('Prever'):
        predicao = enviar_previsao(dados, requisicao)
        exibir_resultado(predicao)